name: "human_parsing_test"

input: "data"
input_shape {
  dim: 1
  dim: 3
  dim: 144
  dim: 96
}

# ------------ Convolution -----------

layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 128
    kernel_size: 5 pad: 2 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}

layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 192
    kernel_size: 5 pad: 2 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 192
    kernel_size: 5 pad: 2 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}

layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 192
    kernel_size: 5 pad: 2 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 192
    kernel_size: 5 pad: 2 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}

layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 192
    kernel_size: 5 pad: 2 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}

layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_2"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 192
    kernel_size: 5 pad: 2 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}

layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 192
    kernel_size: 5 pad: 2 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}

# ------------ Global Image-level Context -----------

layer {
  name: "conv_global"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv_global"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 96
    kernel_size: 5 pad: 2 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu_global"
  type: "ReLU"
  bottom: "conv_global"
  top: "conv_global"
}

layer {
  name: "fc1"
  type: "InnerProduct"
  bottom: "conv_global"
  top: "fc1"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  inner_product_param {
    num_output: 1024
    weight_filler { type: "gaussian" std: 0.001 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu_fc1"
  type: "ReLU"
  bottom: "fc1"
  top: "fc1"
}

layer {
  name: "drop1"
  type: "Dropout"
  bottom: "fc1"
  top: "fc1"
  dropout_param {
    dropout_ratio: 0.3
  }
}

layer {
  name: "fc2"
  type: "InnerProduct"
  bottom: "fc1"
  top: "fc2"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  inner_product_param {
    num_output: 18
    weight_filler { type: "gaussian" std: 0.001 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
	name: 'cmap1'
	type: 'Python'
	bottom: 'fc2'
	top: 'cmap1'
	python_param {
		module: 'cmap_layer'
		layer: 'CmapLayer'
		param_str: "{ 'height': 36, 'width': 24}"
	}
}

layer {
	name: 'cmap2'
	type: 'Python'
	bottom: 'fc2'
	top: 'cmap2'
	python_param {
		module: 'cmap_layer'
		layer: 'CmapLayer'
		param_str: "{ 'height': 72, 'width': 48}"
	}
}

layer {
	name: 'cmap3'
	type: 'Python'
	bottom: 'fc2'
	top: 'cmap3'
	python_param {
		module: 'cmap_layer'
		layer: 'CmapLayer'
		param_str: "{ 'height': 144, 'width': 96}"
	}
}

# ------------ Upsampling -----------

layer {
  name: "upsample1"
  type: "Deconvolution"
  bottom: "conv4_2"
  top: "upsample1"
  param { lr_mult: 0 decay_mult: 0 }
  convolution_param {
    num_output: 192
    pad: 0
    kernel_size: 2
    stride: 2
    weight_filler: { type: "bilinear" } bias_term: false
  }
}

layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "upsample1"
  top: "conv5_1"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 192
    kernel_size: 5 pad: 2 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}

layer {
  name: "sum5"
  type: "Eltwise"
  bottom: "conv3_2"
  bottom: "conv5_1"
  top: "sum5"
  eltwise_param { operation: SUM }
}

layer {
  name: "concat1"
  type: "Concat"
  bottom: "sum5"
  bottom: "cmap1"
  top: "concat1"
  concat_param {
    axis: 1
  }
}

layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "concat1"
  top: "conv5_2"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 192
    kernel_size: 5 pad: 2 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}

layer {
  name: "upsample2"
  type: "Deconvolution"
  bottom: "conv5_2"
  top: "upsample2"
  param { lr_mult: 0 decay_mult: 0 }
  convolution_param {
    num_output: 192
    pad: 0
    kernel_size: 2
    stride: 2
    weight_filler: { type: "bilinear" } bias_term: false
  }
}

layer {
  name: "conv6_1"
  type: "Convolution"
  bottom: "upsample2"
  top: "conv6_1"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 192
    kernel_size: 5 pad: 2 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu6_1"
  type: "ReLU"
  bottom: "conv6_1"
  top: "conv6_1"
}

layer {
  name: "sum6"
  type: "Eltwise"
  bottom: "conv2_2"
  bottom: "conv6_1"
  top: "sum6"
  eltwise_param { operation: SUM }
}

layer {
  name: "concat2"
  type: "Concat"
  bottom: "sum6"
  bottom: "cmap2"
  top: "concat2"
  concat_param {
    axis: 1
  }
}

layer {
  name: "conv6_2"
  type: "Convolution"
  bottom: "concat2"
  top: "conv6_2"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 192
    kernel_size: 5 pad: 2 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu6_2"
  type: "ReLU"
  bottom: "conv6_2"
  top: "conv6_2"
}

layer {
  name: "upsample3"
  type: "Deconvolution"
  bottom: "conv6_2"
  top: "upsample3"
  param { lr_mult: 0 decay_mult: 0 }
  convolution_param {
    num_output: 192
    pad: 0
    kernel_size: 2
    stride: 2
    weight_filler: { type: "bilinear" } bias_term: false
  }
}

layer {
  name: "conv7_1"
  type: "Convolution"
  bottom: "upsample3"
  top: "conv7_1"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 192
    kernel_size: 5 pad: 2 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu7_1"
  type: "ReLU"
  bottom: "conv7_1"
  top: "conv7_1"
}

layer {
  name: "sum7"
  type: "Eltwise"
  bottom: "conv1_2"
  bottom: "conv7_1"
  top: "sum7"
  eltwise_param { operation: SUM }
}

layer {
  name: "concat3"
  type: "Concat"
  bottom: "sum7"
  bottom: "cmap3"
  top: "concat3"
  concat_param {
    axis: 1
  }
}

layer {
  name: "conv7_2"
  type: "Convolution"
  bottom: "concat3"
  top: "conv7_2"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 192
    kernel_size: 5 pad: 2 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu7_2"
  type: "ReLU"
  bottom: "conv7_2"
  top: "conv7_2"
}

layer {
  name: "conv7_image"
  type: "Convolution"
  bottom: "data"
  top: "conv7_image"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 192
    kernel_size: 5 pad: 2 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu7_image"
  type: "ReLU"
  bottom: "conv7_image"
  top: "conv7_image"
}

layer {
  name: "sum8"
  type: "Eltwise"
  bottom: "conv7_image"
  bottom: "conv7_2"
  top: "sum8"
  eltwise_param { operation: SUM }
}

layer {
  name: "conv8"
  type: "Convolution"
  bottom: "sum8"
  top: "conv8"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 256
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

# ------------ Prediction -----------

layer {
  name: "conv9"
  type: "Convolution"
  bottom: "conv8"
  top: "conv9"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 18
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu9"
  type: "ReLU"
  bottom: "conv9"
  top: "conv9"
}

layer {
  name: "conv10"
  type: "Convolution"
  bottom: "conv9"
  top: "conv10"
  param { lr_mult: 1.0 }
  param { lr_mult: 2.0 }
  convolution_param {
    num_output: 18
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "relu10"
  type: "ReLU"
  bottom: "conv10"
  top: "conv10"
}

layer {
  name: "loss_seg"
  type: "Softmax"
  bottom: "conv10"
  top: "loss_seg"
  loss_weight: 1.0
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
